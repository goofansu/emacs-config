(defun +file/delete-this-file ()
  (interactive)
  (when-let* ((buffer (current-buffer))
              (filename (buffer-file-name buffer))
              (path (abbreviate-file-name filename)))
    (when (y-or-n-p (format "Really delete %s? " path))
      (move-file-to-trash path)
      (kill-buffer buffer)
      (message "Deleted %s" path))))

(defun +file/move-this-file (new-path)
  (interactive (list (read-file-name "Move file to: ")))
  (unless (and buffer-file-name (file-exists-p buffer-file-name))
    (user-error "Buffer is not visiting any file"))
  (let ((old-path (buffer-file-name (buffer-base-buffer)))
        (new-path (expand-file-name new-path)))
    (when (directory-name-p new-path)
      (setq new-path (concat new-path (file-name-nondirectory old-path))))
    (make-directory (file-name-directory new-path) 't)
    (rename-file old-path new-path)
    (set-visited-file-name new-path t t)
    (message "File moved to %S" (abbreviate-file-name new-path))))

(bind-key "C-c D" #'+file/delete-this-file)
(bind-key "C-c R" #'+file/move-this-file)

(provide 'lisp-file)
